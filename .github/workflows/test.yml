name: Test anything
run-name: test-${{ github.event }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        required: true
  pull_request:
    branches: main
  push:
  release:
    types:
      - prereleased
      - released

jobs:
  environment:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set environment as variable
      id: input_check
      run: |
        if [ -n "${{ inputs.environment }}" ]
        then
          echo "::set-output name=gh_env::${{ inputs.environment }}"
        else
          echo "::set-output name=gh_env::dev"
        fi
        
    - uses: actions/checkout@v3
    
    - name: hostnames
      id: hostnames
      run: |
        echo hostnames=$(yq -r -o=json .hostnames aws_ec2.yml) >> $GITHUB_OUTPUT
    outputs:
      GH_ENVIRONMENT: ${{ steps.input_check.outputs.gh_env }}
      HOSTNAMES: ${{ steps.hostnames.outputs.hostnames }}

  matrix-test:
    needs: environment
    strategy: 
      matrix:
        version: ${{ fromJson(needs.environment.outputs.hostnames) }}
    runs-on: ubuntu-latest
    steps:
      - run: echo matrix-${{ matrix.version }}
      
  print:
    needs: environment
    environment: ${{ needs.environment.outputs.GH_ENVIRONMENT }}
    runs-on: ubuntu-latest

    steps:
    - name: Print Environment
      run: echo ${{ needs.environment.outputs.GH_ENVIRONMENT }}
    - name: print event
      run: echo "${{ toJSON(github.event.pull_request) }}"
    - name: print pr number
      run: echo "${{ github.event.pull_request.number }}"
    - name: Set environment variables
      run: |
        export TEST_VAR='test value'
        echo "TEST_VAR=$TEST_VAR" >> $GITHUB_ENV
        echo ${{ env.TEST_VAR }}
    - name: print env
      run: |
        env
        echo ${{ env.TEST_VAR }}
    - run: |
        echo ${{ github.ref }}
        echo ${{ github.head_ref }}
    - name: create file in tmp dir
      run: |
        mkdir ../tmp
        touch ../tmp/test.txt
    - name: list cur and ../tmp dir
      run: |
        pwd
        ls -al
        ls -al ../tmp
    - uses: actions/checkout@v3
    - name: print github context from ansible
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
        ansible-playbook -i localhost, -e '{ "GITHUB_VARS": ${{ toJson(github) }} }' playbook.yml
    - name: list cur and ../tmp dir
      run: |
        pwd
        ls -al
        ls -al ../tmp
    - name: list parent dir
      run: |
        ls -al ../
    - name: print git config
      run: git config --list
    - name: print git branches
      run: git branch -a
    - name: list home dir
      run: ls -al ~/
    - name: Ansible
      run: >
        ansible-playbook --version &&
        cat /opt/pipx_bin/ansible &&
        which ansible-playbook &&
        which ansible-inventory &&
        which ansible
    - name: Show pipx packages
      run: pipx list
    - name: Check python
      run: ls -lr /usr/bin/python*
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
    - name: Run ansible inventory
      run: ansible-inventory -i aws_ec2.yml --graph

